; Macro definitions for testing 65c02 code using sim65.

.import exit:absolute ; Make sure we have this symbol defined.

; Exit tests and return success!
.macro tests_pass
  lda #0
  jmp exit
.endmacro

; Exit tests and return an error code :-(
.macro tests_fail err_code
  .ifconst err_code
    .if (err_code < 2) || (err_code > 255)
      .fatal "Invalid error code. Allowed values 2..255"
    .endif

    lda #err_code
    jmp exit
  .else
    .fatal "Error code must be a constant"
  .endif
.endmacro

; Exit tests and return an error code if the Z flag is cleared (ne)
.macro fail_ne err_code
  .local no_error
  beq no_error
  tests_fail err_code
no_error:
.endmacro

; Exit tests and return an error code if the Z flag is set (eq)
.macro fail_eq err_code
  .local no_error
  bne no_error
  tests_fail err_code
no_error:
.endmacro

; Exit tests and return an error code if the C flag is cleared (cc)
.macro fail_cc err_code
  .local no_error
  bcs no_error
  tests_fail err_code
no_error:
.endmacro

; Exit tests and return an error code if the C flag is set (cs)
.macro fail_cs err_code
  .local no_error
  bcc no_error
  tests_fail err_code
no_error:
.endmacro

; Exit tests and return an error code if the N flag is cleared (pl)
.macro fail_pl err_code
  .local no_error
  bmi no_error
  tests_fail err_code
no_error:
.endmacro

; Exit tests and return an error code if the N flag is set (mi)
.macro fail_mi err_code
  .local no_error
  bpl no_error
  tests_fail err_code
no_error:
.endmacro

; Exit tests and return an error code if the V flag is cleared (vc)
.macro fail_vc err_code
  .local no_error
  bvs no_error
  tests_fail err_code
no_error:
.endmacro

; Exit tests and return an error code if the V flag is set (vs)
.macro fail_vs err_code
  .local no_error
  bvc no_error
  tests_fail err_code
no_error:
.endmacro
